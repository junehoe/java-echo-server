/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package echoserver;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;

import java.io.*;
import java.net.*;

public class MockServerSocketWrapperTest {
    MockServerSocketWrapper mockServerSocketWrapper;
    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    private final InputStream originalIn = System.in;
    private final PrintStream originalOut = System.out;

    @Before public void setupStreams() {
        System.setOut(new PrintStream(outContent));
    }

    @Before public void initialize() {
        BufferedReader input = new BufferedReader(new StringReader("hello\n"));
        PrintWriter output = new PrintWriter(new StringWriter(), true);
        mockServerSocketWrapper = new MockServerSocketWrapper(input, output);
        int port = 4242;
        Server server = new Server(mockServerSocketWrapper);
        server.start(port);
    }

    @After public void restoreStreams() {
        System.setIn(originalIn);
        System.setOut(originalOut);
    }

    @Test public void serverSocketGetsCreatedWithPort() {
        assertTrue(mockServerSocketWrapper.wascreateSocketCalled());
    }

    @Test public void dataIsSentAcrossSocket() {
        assertEquals("hello", mockServerSocketWrapper.getSentData());
    }

    @Test public void testToSeeIfCloseWasCalled() {
        assertTrue(mockServerSocketWrapper.wasCloseCalled());
    }
}
